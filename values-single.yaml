multiconnect: false
db:
#Could be MYSQL or PGSQL
  engine: MYSQL
  host: mysql-svc
  port: 3306
  user: root
  password: "P@ssW0rd1"
  idleTimeout: 180000

image:
  tag: v2.47.1
  pullPolicy: Always

core:
  repository: docker.whatsapp.biz/coreapp
  resources:
    limits:
      memory : 256Mi
    requests:
      cpu: 100m
      memory : 64Mi

web:
  ingress:
    enabled: True
  domain: domain.net
  repository: docker.whatsapp.biz/web
  resources:
    limits:
      memory : 256Mi
    requests:
      cpu: 100m
      memory : 64Mi

wamedia:
  volumeSize: 10Gi

# Monitoring based on prometheus image from Whatsapp
monitoring:
  enabled: True
  prometheus:
    restartPolicy: Always
    image:
      repository: docker.whatsapp.biz/prometheus
      pullPolicy: Always
    port: 9090
    volumeSize: 10Gi
    efs: False
    replicas: 1
    resources:
      limits:
        cpu: 100m
        memory : 128Mi
      requests:
        cpu: 100m
        memory : 128Mi
  service:
    name: prometheus
    internalPort: 9090
    externalPort: 9090
  serviceMonitor:
    enabled: False
# If you need to create ServiceMonitor in namespace with prometheus-operator
#   namespace: monitoring   
# Labels for prometheus-operator to catch ServiceMonitor resources 
    labels:
      prometheus: operator
    jobLabel: 'federate'
    interval: '15s'
    scrapeTimeout: '10s'
    match: '{job=~"webstats|appstats"}'
    
tokenSecretName: liveness-probe
postInstall:
  enabled: true
preUpgrade:
  enabled: true
