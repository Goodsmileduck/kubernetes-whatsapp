{{- if .Values.monitoring.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "fullname" . }}-prometheus-pvc
  labels:
    app: {{ template "fullname" . }}-prometheus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.monitoring.prometheus.volumeSize }}
{{- if .Values.monitoring.prometheus.efs }}
  storageClassName: efs
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-prometheus
  labels:
    app: {{ template "fullname" . }}-prometheus
spec:
  replicas: {{ .Values.monitoring.prometheus.replicas }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}-prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-prometheus
{{- if .Values.monitoring.prometheus.podAnnotations }}
      annotations:
{{ toYaml .Values.monitoring.prometheus.podAnnotations | indent 8 }}
{{- end }}
    spec:
      restartPolicy: {{ .Values.monitoring.prometheus.restartPolicy }}
      initContainers:
      - name: unlock
        image: busybox:1.28
        command:
        - rm
        - "-f"
        - "/prometheus-data/lock"
        volumeMounts:
        - name: whatsapp-prometheus
          mountPath: /prometheus-data
      containers:
      - name: {{ template "fullname" . }}-prometheus
        image: "{{ .Values.monitoring.prometheus.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.monitoring.prometheus.image.pullPolicy }}
        resources:
{{ toYaml .Values.monitoring.prometheus.resources | indent 12 }}
        ports:
        - containerPort: {{ .Values.monitoring.service.internalPort }}
          protocol: TCP
          name: prometheus
        command: ["/bin/prometheus-init.sh"]
        env:
        - name: WA_WEB_ENDPOINT
          value: {{ template "fullname" . }}-web
        - name: WA_WEB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-monitoring
              key: WA_WEB_USERNAME
        - name: WA_WEB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-monitoring
              key: WA_WEB_PASSWORD
        - name: WA_CADVISOR_PORT
          value: "9099"
        - name: WA_NODE_EXPORTER_PORT
          value: "9100"
        volumeMounts:
        - name: whatsapp-prometheus
          mountPath: /prometheus-data
        securityContext:
          runAsUser: 0
      volumes:
      - name: whatsapp-prometheus
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}-prometheus
  labels:
    app: {{ template "fullname" . }}-prometheus
spec:
  type: {{ .Values.monitoring.service.type }}
  ports:
    - port: {{ .Values.monitoring.service.externalPort }}
      targetPort: {{ .Values.monitoring.service.internalPort }}
      protocol: TCP
      name: {{ .Values.monitoring.service.name }}
  selector:
    app: {{ template "fullname" . }}-prometheus
{{- if .Values.monitoring.serviceMonitor.enabled }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ template "fullname" . }}-prometheus
{{- if .Values.monitoring.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
{{- end }}
  labels:
    app: {{ template "fullname" . }}-prometheus
{{- if .Values.monitoring.serviceMonitor.labels }}
{{ toYaml .Values.monitoring.serviceMonitor.labels | indent 4 }}
{{- end }}
spec:
  {{- if .Values.monitoring.serviceMonitor.jobLabel }}
  jobLabel: {{ .Values.monitoring.serviceMonitor.jobLabel }}
  {{- end }}
  endpoints:
    - path: /federate
      port: {{ .Values.monitoring.service.name }}
  {{- if .Values.monitoring.serviceMonitor.interval }}
      interval: {{ .Values.monitoring.serviceMonitor.interval }}
  {{- end }}
  {{- if .Values.monitoring.serviceMonitor.scrapeTimeout }}
      scrapeTimeout: {{ .Values.monitoring.serviceMonitor.scrapeTimeout }}
  {{- end }}
      honorLabels: true
      params:
        match[]: 
        - {{ .Values.monitoring.serviceMonitor.match | quote}}
  namespaceSelector:
    matchNames:
    - {{ .Release.Namespace }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}-prometheus
{{- end }}
{{- end }}
{{- if not .Values.monitoring.existingSecret -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "fullname" . }}-monitoring
  labels:
    app: {{ template "fullname" . }}-prometheus
data:
{{- range $name, $value := .Values.monitoring.secret }}
{{- if not (empty $value) }}
  {{ $name }}: {{ $value | b64enc }}
{{- end }}
{{- end }}
{{- end }}
