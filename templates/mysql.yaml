{{- if .Values.db.enabled  }}
{{- if eq .Values.db.engine "MYSQL" }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "fullname" . }}-mysql-pvc
  labels:
    app: {{ template "fullname" . }}-mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.db.volumeSize }}
{{- if .Values.db.efs }}
  storageClassName: efs
{{- end }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "fullname" . }}-db
  labels:
    app: {{ template "fullname" . }}-mysql
spec:
{{- if not .Values.db.omitClusterIP }}
  {{- with .Values.db.clusterIP }}
  clusterIP: {{ if eq "-" . }}""{{ else }}{{ . | quote }}{{ end }}
  {{- end }}
{{- end }}
  selector:
    app: {{ template "fullname" . }}-mysql
  ports:
  - protocol: TCP
    port: {{ .Values.db.port }}
    targetPort: 3306
  type: ClusterIP
---
apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-mysql
  labels:
    app: {{ template "fullname" . }}-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}-mysql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-mysql
{{- if .Values.db.podAnnotations }}
      annotations:
{{ toYaml .Values.db.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- with .Values.db.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: mysql
        image: "{{ .Values.db.mysql.repository }}:{{ .Values.db.mysql.tag }}"
        resources:
{{ toYaml .Values.db.resources | indent 12 }}
        args:
          - "--ignore-db-dir=lost+found"
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "secretName" . }}
              key: WA_DB_PASSWORD
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        {{- if .Values.db.mysql.configurationFiles }}
        {{- range $key, $val := .Values.db.mysql.configurationFiles }}
        - name: configurations
          mountPath: {{ $.Values.db.mysql.configurationFilesPath }}{{ $key }}
          subPath: {{ $key }}
        {{- end -}}
        {{- end }}
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-mysql-pvc
      {{- if .Values.db.mysql.configurationFiles }}
      - name: configurations
        configMap:
          name: {{ template "fullname" . }}-configuration
      {{- end }}
{{- end }}
{{- end }}
