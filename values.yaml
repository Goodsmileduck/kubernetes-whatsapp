image:
  tag: v2.47.3
  pullPolicy: Always

multiconnect: true
db:
  enabled: true
# for external db
#  host: mysql.host.com
#  port: 3306
  user: root
  password: "P@ssW0rd1"
  idleTimeout: 180000
  volumeSize: 10Gi
#Could be MYSQL or PGSQL
  engine: "MYSQL"
  mysql:
    repository: mysql
    tag: 5.7.21
    port: 3306
    configurationFilesPath: /etc/mysql/conf.d/
    configurationFiles:
      mysql.cnf: |-
        [mysqld]
        max_connections=300
  pgsql:
    repository: postgres
    tag: 13.8
    port: 5432

master:
  replicas: 3
  repository: docker.whatsapp.biz/coreapp
  resources:
    limits:
      memory : 256Mi
    requests:
      cpu: 100m
      memory : 64Mi

core:
  replicas: 3
  maxReplicas: 5
  minReplicas: 3
  repository: docker.whatsapp.biz/coreapp
  resources:
    limits:
      memory : 256Mi
    requests:
      cpu: 100m
      memory : 64Mi

web:
  ingress:
    enabled: true
    path: /
    tls:
    - secretName: tls-secret
      hosts:
       - domain.net
    hosts:
    - domain.net
  replicas: 2
  maxReplicas: 5
  minReplicas: 2
  repository: docker.whatsapp.biz/web
  resources:
    limits:
      memory : 256Mi
    requests:
      cpu: 100m
      memory : 64Mi

wamedia:
#Could be efs, nfs or ceph
  type: efs
  volumeSize: 1Gi
  nfs:
    server: nfs-server.default.svc.cluster.local
    path: /wamedia
  ceph:
    storageClassName: ceph
  efs:
    keepDays: 30

# Monitoring based on prometheus image from Whatsapp
monitoring:
  enabled: False
  prometheus:
    restartPolicy: Always
    image:
      repository: docker.whatsapp.biz/prometheus
      pullPolicy: Always
    port: 9090
    volumeSize: 10Gi
    efs: False
    replicas: 1
    resources:
      limits:
        cpu: 100m
        memory : 128Mi
      requests:
        cpu: 100m
        memory : 128Mi
  service:
    name: prometheus
    internalPort: 9090
    externalPort: 9090
  serviceMonitor:
    enabled: False
# If you need to create ServiceMonitor in namespace with prometheus-operator
#   namespace: monitoring   
# Labels for prometheus-operator to catch ServiceMonitor resources 
    labels:
      prometheus: operator
    jobLabel: 'federate'
    interval: '15s'
    scrapeTimeout: '10s'
    match: '{job=~"webstats|appstats"}'

tokenSecretName: web-api-key
adminPassword: "myNewPassword"
postInstall:
  enabled: true
preUpgrade:
  enabled: true
scripts:
  repository: python
  tag: 3.8-alpine
